{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App.js","index.js","components/ContactList/ContactList.module.css"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","form","this","htmlFor","type","pattern","title","required","id","onChange","Component","Filter","filter","label","ContactList","contacts","onDeleteContact","map","style","list","button","onClick","App","formSubmitHandler","find","item","toLowerCase","alert","newContact","console","log","changeFilter","getVisibleContacs","normalizeSearch","contact","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8938cf40.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport shortid from 'shortid';\r\nimport styles from './ContactForm.module.css'\r\n\r\n\r\nclass ContactForm extends Component{\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n    handleSubmit = e => {\r\n    e.preventDefault();\r\n        this.props.onSubmit(this.state)\r\n        this.reset();\r\n        }\r\n\r\n    reset = () => {\r\n        this.setState({name: '', number: ''})\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n            <form className={styles.form} onSubmit={this.handleSubmit}>\r\n                    <label htmlFor={ this.nameInputId}>name\r\n           <input\r\n                            type='text'\r\n                            name='name'\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            id={this.nameInputId}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChange} />\r\n          </label>\r\n          <label htmlFor={ this.numberInputId}>number\r\n           <input\r\n                            type='number'\r\n                            name='number'\r\n                            id={this.numberInputId}\r\n                            value={this.state.number}\r\n                            onChange={this.handleChange} />\r\n          </label>\r\n          <button type='submit'>Add contact</button>\r\n        </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm\r\n\r\n\r\n","import styles from './Filter.module.css'\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n    return (\r\n        <div className={styles.label}>\r\n            <label>\r\n        Find contacts by name\r\n        <input type=\"filter\" value={filter} onChange={onChange}/>\r\n    </label >\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Filter\r\n\r\n\r\n\r\n    ","import PropTypes from 'prop-types';\r\nimport style from './ContactList.module.css'\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n        {contacts.map(({id, name, number}) => (\r\n            \r\n                  <li key={id} className={style.list}>\r\n            <p>{name}: {number}</p>\r\n            <button className={style.button} onClick={()=>onDeleteContact(id)}>Delete</button>\r\n           </li>  \r\n        ) \r\n          )}\r\n  </ul>\r\n)\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList","import { Component } from \"react\";\nimport ContactForm from './ContactForm';\nimport Filter from './Filter'\nimport ContactList from './ContactList';\nimport shortid from 'shortid';\n\nclass App extends Component {\nstate = {\n   contacts: [\n],\n  filter: '',\n}\n  \n  formSubmitHandler = ({ name, number }) => {\n    if (this.state.contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      const newContact = { id: shortid.generate(), name, number };\n      console.log(newContact);\n\n    this.setState(({contacts}) => ({\n      contacts: [...contacts, newContact]\n    }))\n    }\n  }\n\n  changeFilter = (e) => {\n    this.setState({filter: e.currentTarget.value})\n  }\n\n  getVisibleContacs = () => {\n    const { filter, contacts } = this.state;\n    const normalizeSearch = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeSearch),\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n    contacts: prevState.contacts.filter(contact=>contact.id!==contactId)\n  }))\n  }\n  \n  componentDidMount() {\n    console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({contacts: parsedContacts})\n      }\n}\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновилось поле contacts, записываю в хранилище');\n      \n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n}\n  }\n\n  render() {\n   console.log('App render');\n    const visibleContacts = this.getVisibleContacs();\n    \n    return (\n      <div>\n       \n  <h1>Phonebook</h1>\n  <ContactForm onSubmit={ this.formSubmitHandler} />\n\n  <h2>Contacts</h2>\n        <Filter\n          filter={this.state.filter}\n          onChange={this.changeFilter}\n        />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact} />\n\n       </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3J9bo\",\"button\":\"ContactList_button__3S_lG\"};"],"sourceRoot":""}